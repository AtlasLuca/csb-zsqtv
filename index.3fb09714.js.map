{"mappings":"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","sources":["src/index.js"],"sourcesContent":["import \"./styles.css\";\n\nconst app = document.getElementById(\"app\");\n\napp.innerHTML = `\n<div id=\"outer\" style=\"\">\n  <canvas id=\"canvas\" width=\"600\" height=\"600\" style=\"border: solid black 0px;\">\n    Your browser does not support canvas elements.\n  </canvas>\n  <div id=\"bottombar\">\n    <button id=\"modebutton\">Draw</button>\n    <button id=\"backgroundbutton\">No lines</button>\n    <input id=\"size\" type=\"number\" min=\"5\" max=\"50\" value=\"10\" step=\"5\" class=\"size\">\n    <input id=\"color\" type=\"color\"></button>\n  </div>\n</div id=\"outer\">\n<canvas id=\"pattern\" width=\"50\" height=\"50\" style=\"display: none; left: 50px;\"></canvas>\n<canvas id=\"clone\" style=\"display: none;\">If you can see this than you might have CSS disabled</canvas>\n`;\n\nvar ongoingTouches = [];\n\nvar usepattern = false;\nvar mode = 0;\nvar startTouches = [];\n/*var colorid = 0;\nvar colors = [\n  \"#000000\",\n  \"#888888\",\n  \"#ff0000\",\n  \"#ff8800\",\n  \"#ffff00\",\n  \"#008800\",\n  \"#00ff00\",\n  \"#00ffff\",\n  \"#0000ff\",\n  \"#8800ff\",\n  \"#ff00ff\",\n  \"#964b00\"\n];*/\n\nvar backgroundpattern = \"\";\n\nfunction makepattern() {\n  var el = document.getElementById(\"pattern\");\n  var ctx = el.getContext(\"2d\");\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, 50, 50);\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(1, 1, 48, 48);\n  backgroundpattern = ctx.createPattern(el, \"repeat\");\n}\n\nfunction clearCanvas() {\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  if (usepattern) {\n    ctx.fillStyle = backgroundpattern;\n    ctx.fillRect(0, 0, el.width, el.height);\n  } else {\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillRect(0, 0, el.width, el.height);\n    ctx.stroke();\n  }\n}\n\nfunction colorForTouch(touch) {\n  let color;\n  color = document.getElementById(\"color\").value;\n  /*console.log(\n    \"color for touch with identifier \" + touch.identifier + \" = \" + color\n  );*/\n  return color;\n}\n\nfunction copyTouch({ identifier, pageX, pageY }) {\n  return { identifier, pageX, pageY };\n}\n\nfunction ongoingTouchIndexById(idToFind) {\n  for (var i = 0; i < ongoingTouches.length; i++) {\n    var id = ongoingTouches[i].identifier;\n\n    if (id === idToFind) {\n      return i;\n    }\n  }\n  return -1; // not found\n}\n\nfunction handleStart(evt) {\n  evt.preventDefault();\n  //console.log(\"startTouches.\");\n  var el = document.getElementById(\"canvas\");\n  if (el.width !== window.innerWidth || el.height !== window.innerHeight - 30) {\n    el.width = window.innerWidth.toString();\n    el.style.width = window.innerWidth;\n    el.height = (window.innerHeight - 30).toString();\n    el.style.height = window.innerHeight - 30;\n    var clone = document.getElementById(\"clone\");\n    clone.width = window.innerWidth.toString();\n    clone.style.width = window.innerWidth;\n    clone.height = (window.innerHeight - 30).toString();\n    clone.style.height = window.innerHeight - 30;\n  }\n  //var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  if (mode === 3 || mode === 2) {\n    document.getElementById(\"clone\").getContext(\"2d\").drawImage(el, 0, 0);\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    //console.log(\"startTouches:\" + i + \"...\");\n    if (ongoingTouches.length <= 1) {\n      ongoingTouches.push(copyTouch(touches[i]));\n    }\n    //var color = colorForTouch(touches[i]);\n    startTouches[i] = touches[i];\n    /*\n    ctx.beginPath();\n    //ctx.arc(touches[i].pageX, touches[i].pageY, 4, 0, 2 * Math.PI, false); // a circle at the start\n    //ctx.fillStyle = color;\n    ctx.fill();\n    */\n    //console.log(\"startTouches:\" + i + \".\");\n  }\n}\n\nfunction handleMove(evt) {\n  evt.preventDefault();\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      //console.log(\"continuing touch \" + idx);\n      ctx.beginPath();\n      /*console.log(\n        \"ctx.moveTo(\" +\n          ongoingTouches[idx].pageX +\n          \", \" +\n          ongoingTouches[idx].pageY +\n          \");\"\n      );*/\n      /*console.log(\n        \"ctx.lineTo(\" + touches[i].pageX + \", \" + touches[i].pageY + \");\"\n      );*/\n      var widthvalue = document.getElementById(\"size\").value;\n      if (touches[i].force === 0) {\n        ctx.lineWidth = widthvalue;\n      } else {\n        ctx.lineWidth = touches[i].force * widthvalue;\n      }\n      ctx.strokeStyle = color;\n      ctx.lineCap = \"round\";\n      if (mode === 0) {\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      } else if (mode === 1) {\n        ctx.lineWidth = widthvalue * 2;\n        if (usepattern) {\n          ctx.strokeStyle = backgroundpattern;\n        } else {\n          ctx.strokeStyle = \"#ffffff\";\n        }\n        ctx.moveTo(ongoingTouches[idx].pageX, ongoingTouches[idx].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      } else if (mode === 2) {\n        if (i === 0) {\n          ctx.drawImage(document.getElementById(\"clone\"), 0, 0);\n          var radius = Math.sqrt(\n            Math.pow(startTouches[i].pageX - touches[i].pageX, 2) +\n              Math.pow(startTouches[i].pageY - touches[i].pageY, 2)\n          );\n          ctx.arc(\n            startTouches[i].pageX,\n            startTouches[i].pageY,\n            radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n          ctx.stroke();\n        }\n      } else if (mode === 3) {\n        if (i === 0) {\n          ctx.drawImage(document.getElementById(\"clone\"), 0, 0);\n          ctx.moveTo(startTouches[i].pageX, startTouches[i].pageY);\n          ctx.lineTo(touches[i].pageX, touches[i].pageY);\n          ctx.stroke();\n        }\n      }\n\n      ongoingTouches.splice(idx, 1, copyTouch(touches[i])); // swap in the new touch record\n      //console.log(\".\");\n      /*} else {*/\n      //console.log(\"can't figure out which touch to continue\");\n    }\n  }\n}\n\nfunction handleEnd(evt) {\n  evt.preventDefault();\n  //console.log(\"touchend\");\n  var el = document.getElementById(\"canvas\");\n  var ctx = el.getContext(\"2d\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var color = colorForTouch(touches[i]);\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n\n    if (idx >= 0) {\n      ctx.lineWidth = 4;\n      ctx.fillStyle = color;\n      //ctx.fillStyle = backgroundpattern;\n      ctx.beginPath();\n      if (mode === 2) {\n        var radius = Math.sqrt(\n          Math.pow(startTouches[i].pageX - touches[i].pageX, 2) +\n            Math.pow(startTouches[i].pageY - touches[i].pageY, 2)\n        );\n        ctx.arc(\n          startTouches[i].pageX,\n          startTouches[i].pageY,\n          radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        ctx.stroke();\n      } else if (mode === 3) {\n        ctx.drawImage(document.getElementById(\"clone\"), 0, 0);\n        ctx.moveTo(startTouches[i].pageX, startTouches[i].pageY);\n        ctx.lineTo(touches[i].pageX, touches[i].pageY);\n        ctx.stroke();\n      }\n      //ctx.fillRect(touches[i].pageX - 4, touches[i].pageY - 4, 8, 8); // and a square at the end\n      ongoingTouches.splice(idx, 1); // remove it; we're done\n    } else {\n      //console.log(\"can't figure out which touch to end\");\n    }\n  }\n}\n\nfunction handleCancel(evt) {\n  evt.preventDefault();\n  //console.log(\"touchcancel.\");\n  var touches = evt.changedTouches;\n\n  for (var i = 0; i < touches.length; i++) {\n    var idx = ongoingTouchIndexById(touches[i].identifier);\n    ongoingTouches.splice(idx, 1); // remove it; we're done\n  }\n}\n\nfunction startup() {\n  var el = document.getElementById(\"canvas\");\n  if (el !== null && typeof el !== \"undefined\") {\n    document.removeEventListener(\"mousemove\", startup);\n    document.removeEventListener(\"startTouches\", startup, false);\n    makepattern();\n    if (\n      el.width !== window.innerWidth ||\n      el.height !== window.innerHeight - 30\n    ) {\n      el.width = window.innerWidth.toString();\n      el.style.width = window.innerWidth;\n      el.height = (window.innerHeight - 30).toString();\n      el.style.height = window.innerHeight - 30;\n      var clone = document.getElementById(\"clone\");\n      clone.width = window.innerWidth.toString();\n      clone.style.width = window.innerWidth;\n      clone.height = (window.innerHeight - 30).toString();\n      clone.style.height = window.innerHeight - 30;\n    }\n    var ctx = el.getContext(\"2d\");\n\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillRect(0, 0, el.width, el.height);\n    ctx.stroke();\n\n    el.addEventListener(\"touchstart\", handleStart, false);\n    el.addEventListener(\"touchend\", handleEnd, false);\n    el.addEventListener(\"touchcancel\", handleCancel, false);\n    el.addEventListener(\"touchmove\", handleMove, false);\n    //window.addEventListener(\"keydown\", onkey, false);\n    document.getElementById(\"modebutton\").addEventListener(\"click\", (evt) => {\n      var self = this.getElementById(\"modebutton\");\n      if (mode === 0) {\n        self.innerHTML = \"Erase\";\n        mode = 1;\n      } else if (mode === 1) {\n        self.innerHTML = \"Circle\";\n        mode = 2;\n      } else if (mode === 2) {\n        self.innerHTML = \"Line\";\n        mode = 3;\n      } else if (mode === 3) {\n        self.innerHTML = \"Draw\";\n        mode = 0;\n      }\n    });\n    document\n      .getElementById(\"backgroundbutton\")\n      .addEventListener(\"click\", (evt) => {\n        var self = this.getElementById(\"backgroundbutton\");\n        if (usepattern) {\n          usepattern = false;\n          self.innerHTML = \"No lines\";\n        } else {\n          usepattern = true;\n          self.innerHTML = \"Lines\";\n        }\n        clearCanvas();\n      });\n    /*document.getElementById(\"color\").addEventListener(\"click\", (evt) => {\n      var self = this.getElementById(\"color\");\n      if (colorid >= colors.length - 1) {\n        colorid = 0;\n        self.style.background = colors[0];\n      } else {\n        colorid++;\n        self.style.background = colors[colorid];\n      }\n    });*/\n  }\n}\n\ndocument.addEventListener(\"load\", () => startup);\n\ndocument.addEventListener(\"startTouches\", startup, false);\ndocument.addEventListener(\"mousemove\", startup);\n"],"names":["document","getElementById","innerHTML","$2ff1f906cd8af8d3$var$ongoingTouches","$2ff1f906cd8af8d3$var$usepattern","$2ff1f906cd8af8d3$var$mode","$2ff1f906cd8af8d3$var$startTouches","$2ff1f906cd8af8d3$var$backgroundpattern","$2ff1f906cd8af8d3$var$colorForTouch","touch","color","value","$2ff1f906cd8af8d3$var$copyTouch","identifier","pageX","pageY","$2ff1f906cd8af8d3$var$ongoingTouchIndexById","idToFind","i","length","$2ff1f906cd8af8d3$var$handleStart","evt","preventDefault","el","width","window","innerWidth","height","innerHeight","toString","style","clone","touches","changedTouches","getContext","drawImage","push","$2ff1f906cd8af8d3$var$handleMove","ctx","idx","beginPath","widthvalue","force","lineWidth","strokeStyle","lineCap","moveTo","lineTo","stroke","radius","Math","sqrt","pow","arc","PI","splice","$2ff1f906cd8af8d3$var$handleEnd","fillStyle","$2ff1f906cd8af8d3$var$handleCancel","$2ff1f906cd8af8d3$var$startup","removeEventListener","fillRect","createPattern","$2ff1f906cd8af8d3$var$makepattern","addEventListener","self","this","$2ff1f906cd8af8d3$var$clearCanvas"],"version":3,"file":"index.3fb09714.js.map"}